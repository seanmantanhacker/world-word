<!DOCTYPE html>
<html lang="en" translate="no">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Game Loading</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <audio id="music2" loop >
        <source src="/music/dramatic-atmosphere-with-piano-and-violin-short-version-199232.mp3">
        Your browser does not support the audio element.
    </audio>
    <audio id="music3" loop >
        <source src="/music/sukuna_ost.mp3">
        Your browser does not support the audio element.
    </audio>
    
    <link rel="stylesheet" href="/css/loading.css" />
    </head>
<body class="bg-main">
    <div class="bg"> 
        <div class="center2 custom-text1">
            World Word Level Question, by Kim Min Ji
        </div>
        <div id="myProgress">
            <div id="myBar"></div>
            <div class="center-2">0 %</div>
          </div>  
    </div>

    <div id="container" class="container remove">
        <div class="custom-text2 center" id="question">DUMMY QUESTION</div>
        <div class="remove" id="info"></div>
        <h1 id="timer" class="center custom-text3 hidden"></h1>
        
         <div id="answer-box" class ="answer-box hidden">
            
         </div>
         <div id="input-box" class="input-box">
            <label class="custom-text4" for="answer">Jawaban kecohan</label>
            <input class="kecohan" type="text" placeholder="..." name="answer">
            <button class="center-button2" id="send">Send !</button>
            <input class="kunci center-1" type="text" disabled>
         </div>
         <div id="score" class="center hiddena">
            <table id="table-score">
                <tr>
                  <th>Name</th>
                  <th>Answer</th>
                  <th>score</th>
                </tr>
               
                
              </table>
         </div>
        
    </div>
    
    </body>
    </html>

    <script>
        
        function shuffle(array) {
            let currentIndex = array.length;

            // While there remain elements to shuffle...
            while (currentIndex != 0) {

                // Pick a remaining element...
                let randomIndex = Math.floor(Math.random() * currentIndex);
                currentIndex--;

                // And swap it with the current element.
                [array[currentIndex], array[randomIndex]] = [
                array[randomIndex], array[currentIndex]];
            }
            return 0;
            }
        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }
    </script>

    <script>
        var audio2 = document.getElementById("music2")
        var audio3 = document.getElementById("music3")
        $("#container").addClass("remove")
        data_peserta = <%-JSON.stringify(peserta)%>;
        set_q = <%-JSON.stringify(setQuestion)%>;
        query = <%-JSON.stringify(query)%>;
        gameState = <%-JSON.stringify(state)%>;
        if (gameState.gameStart == false) {
            window.location.href = "/"
        }
        var myId = ""
        const my_uuid = localStorage.getItem("uuid");
        
            if (my_uuid == null){
                let myuuid = generateUUID();
                
                localStorage.setItem("uuid", myuuid);
                myId = myuuid
            } else {
                myId = my_uuid
            } 
        var app = {
        socket: null,
        connect: function() {
            var self = this;
            if( self.socket ) {
                self.socket.destroy();
                delete self.socket;
                self.socket = null;
            }
            this.socket = io.connect({
                reconnection: true,
                reconnectionDelay: 1000,
                reconnectionDelayMax : 5000,
                reconnectionAttempts: Infinity
            } );
            this.socket.on( 'connect', function () {
                             
                console.log( 'connected to server' );
            } );
            this.socket.on( 'disconnect', function () {
                console.log( 'disconnected from server' );
                window.setTimeout( 'app.connect()', 5000 );
            } );

            this.socket.on( 'timer', function (msg) {
                
                $( "#timer" ).removeClass( "hidden" )
                $( "#timer" ).text(msg)
                
            } );
            this.socket.on( 'receive soal', function (msg) {
                
                message = msg.msg
                fase = msg.fase
                if (fase == 4 ){
                    audio2.pause()
                    audio3.play()
                }
                $("#question").text(message)

                $("#input-box").removeClass("remove")
                $("#answer-box").addClass("remove")
                $("#question").removeClass("remove")
                $("#timer").removeClass("remove")
                $("#score").addClass("hidden")
                $("#info").addClass("remove")
                
                           
            } );

            this.socket.on( 'receive kecohan', function (msg) {
                
                $("#input-box").addClass("remove")
                $("#answer-box").removeClass("remove hidden")
                $("#answer-box").empty()
                new_array = shuffle(msg)
                
                for (i = 0; i < msg.length; i ++){
                    if (msg[i][1] == myId){
                        continue
                    }
                    $("#answer-box").append(`<button class="button" id="button${i}" onclick="myFunction('${msg[i][1]}','button${i}')">${msg[i][0]}</button>`)
                }
                              
            } );
            this.socket.on( 'send score', async function (msg) {
                
                ronde = msg.round
                $("#input-box").addClass("remove")
                $("#answer-box").addClass("remove")
                $("#question").addClass("remove")
                $("#timer").addClass("remove")
                $("#score").removeClass("hidden remove")
                $("#info").removeClass("remove hidden")
                
                msg_ronde = ("a" + ronde)
                $("#info").text("Jawaban yang Benar adalah : " + set_q[msg_ronde])
                $("#table-score").find("tr:gt(0)").remove();
                await sleep(3000); 
                list_score = msg.msg               
                var length = Object.keys(list_score).length;
                
                pemenang = "TbC"   
                score_sem = -999

                //add here

                for (var i = 0; i < length ; i++) {
                    data = list_score[Object.keys(list_score)[i]];
                    
                    nama = data.name
                    
                    score = parseInt(data.score)
                    
                    adj = parseInt(data.addj)
                    display = data.display

                    $('#table-score tbody tr:last').after(`<tr class="${Object.keys(list_score)[i]}">
                        <td>${nama}</td>
                        <td>   </td>
                        <td>${score - adj}</td>
                    </tr>`);
                }


                //add here
                
                
                for (var i = 0; i < length ; i++) {
                    key = Object.keys(list_score)[i]
                    data = list_score[key];
                    
                    nama = data.name
                    jawab_punya = data.pilihan
                    pilihanText = data.pilihanText
                    score = parseInt(data.score)
                    if (score > score_sem){
                        score_sem = score
                        pemenang = nama
                    }
                    adj = parseInt(data.addj)
                    before = score-adj
                    display = parseInt(data.display)

                    $(`.${key} td:nth-child(2)`).text(pilihanText);
                    await sleep(2000)
                    
                    score_realtime_before = $(`.${key} td:nth-child(3)`).text();
                    score_realtime = score_realtime_before.split('(')[0].trim();
                    
                    if (display < 0){
                        
                        hsa = `<p>${score_realtime}<span class="red"> (${display})</span></p>`
                        // hsa2 = `<p>${score}<span class="red">${adj}</span></p>`
                    }
                    else if (display == 0){
                       
                        hsa = `<p>${score_realtime}<span> (${display}) </span></p>`

                        score_orang_lain = $(`.${jawab_punya} td:nth-child(3)`).text();
                        
                       
                        score = score_orang_lain.split('(')[0].trim();
                    
                        hsa_org_lain = `<p>${score}<span class="green"> (+40)</span></p>`
                        $(`.${jawab_punya} td:nth-child(3)`).html(hsa_org_lain);

                    } else {
                        
                        hsa = `<p>${score_realtime}<span class="green"> (+${display})</span></p>`
                        // hsa2 = `<p>${score}<span class="green">+${adj}</span></p>`
                    }

                    //$("#table-score tbody tr:last").find('td:eq(2)').html(hsa);
                    $(`.${key} td:nth-child(3)`).html(hsa);
                    
                    await sleep(2000)
                           
                    var j = 1
                    for (j = 1 ; j <= Math.abs(display) ; j++){
                        if (display > 0){
                            helper = parseInt(score_realtime) + j
                            
                            hsa2 = `<p>${helper}<span class="green"> (+${display - j})</span></p>`
                        //$("#table-score tbody tr:last").find('td:eq(2)').html(hsa2);
                        $(`.${key} td:nth-child(3)`).html(hsa2);
                        } else {
                            helper = parseInt(score_realtime) - j
                            
                            hsa2 = `<p>${helper}<span class="red"> (${display + j})</span></p>`
                        //$("#table-score tbody tr:last").find('td:eq(2)').html(hsa2);
                        $(`.${key} td:nth-child(3)`).html(hsa2);
                        }
                        await sleep(15)
                    
                    }

                    if ( !(jawab_punya == "true" || jawab_punya == undefined)){
                        var j = 1
                        
                        for (j = 1 ; j <= 40 ; j++){
                         
                            helper = parseInt(score) + j
                                
                            hsa_org_lain = `<p>${helper}<span class="green"> (+${40 - j})</span></p>`
                            $(`.${jawab_punya} td:nth-child(3)`).html(hsa_org_lain);
                            await sleep(15)
                            
                    
                        }
                    }
                    
                    await sleep(3000)
                   
                }
                

                await sleep(3000); 
                if (ronde == 4) {
                    await sleep(1000)
                    $("#info").text("PEMENANGNYA ADALAH " + pemenang)
                    $("#info").addClass("big-text")
                    $("#score").addClass("remove")

                    await sleep(4000)
                }
                
                if (data_peserta[myId].host){
                    if (ronde == 4){
                        app.socket.emit('game finish', null);
                        //finish
                        window.location.href = "/"
                    }
                    mess = "start fase " + (ronde + 1)
                    app.socket.emit(mess, "aa");
                } else {
                    if (ronde == 4){
                        //finish
                        window.location.href = "/"
                    }
                }
                
                          
            } );
            
        }
        } // ap
       
         $( document ).ready(function() {

            //INIT
            audio2.play()
            var i = 0;
            
            if (i == 0) {
                i = 1;
                var elem = document.getElementById("myBar");
                var width = 1;
                var id = setInterval(frame, 10);//20
                function frame() {
                
                if (width >= 100) {
                    clearInterval(id);
                    i = 0;
                    $(".bg").addClass("remove")
                    $("#container").removeClass("remove")
                    console.log("kapan masuk sini beres")
                    console.log(data_peserta[myId].host)
                    if (data_peserta[myId].host){
                        fase = gameState.fase
                        if (fase == 0){
                            fase = 1
                        }
                        msg_fase = `start fase ${fase}`
                        
                        app.socket.emit(msg_fase, null);
                    }
                    
                } else {

                    width++;
                    $(".center-2").text(width+" %")
                    elem.style.width = width + "%";
                    if (gameState.fase == 0){
                        if (width ==30){
                            clearInterval(id);
                            id = setInterval(frame, 4000);
                        } 
                        if (width == 32){
                            clearInterval(id);
                            id = setInterval(frame,20)
                        }
                        if (width == 78){
                            clearInterval(id);
                            id = setInterval(frame, 6000);
                        }
                        if (width == 79){
                            clearInterval(id)
                            id = setInterval(frame,100)
                        }
                    } 
                   
                }
                }
            }

             //INIT
             console.log("kapan masuk sini sebeleum socket")
             socket = app.connect()  
               if (!query.spectate) {
                app.socket.emit('start-session', {  sessionId: myId })
          

                $("#send").on( "click", function() {   
                    send_kecohan =  $(".kecohan").val()
                    
                    data = {
                        from : myId,
                        kecohan : send_kecohan
                    }    
                
                    app.socket.emit('send question', data);
                    $(".kecohan").val("")
                    $(".kunci").val(send_kecohan)
                    
                });
                }
            
            })
        if (!query.spectate) {
            function myFunction(orang,buttonId) {
                
                var assign_peserta= Object.keys(data_peserta).length;
            
                for (i = 0 ; i < assign_peserta+2 ; i++){
                    word = "button" + i
                    
                    if (word == buttonId){
                        $('#'+word).addClass("button-choose")
                    } else {
                        $('#'+word).removeClass("button-choose")
                    }
                }
                data2 ={
                    from:myId,
                    answer:orang
                }
                app.socket.emit('send answer', data2);
            }
            
        }

         
    </script>