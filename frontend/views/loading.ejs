<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Game Loading</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    
    <link rel="stylesheet" href="/css/loading.css" />
    </head>
<body>
    <div class="bg"> 
        <div>
            Another World Word wIDE!
        </div>

        <div id="myProgress">
            <div id="myBar"></div>
          </div>
            
            

    </div>

    <div class="container">
        <div id="question">Pertanyaan nya adalah wkwkwwkwkw</div>
        <div class="remove" id="info"></div>
        <h2 id="timer" class="hidden"></h2>
        <div id="input-box" class="input-box">
            <label for="answer">Jawaban kecohan :</label>
            <input class="kecohan" type="text" placeholder="..." name="answer">
            <button id="send">Send !</button>
            <input class="kunci" type="text" disabled>
         </div>
         <div id="answer-box" class ="answer-box hidden">
            <button>aaa</button>
            <button>aaa</button>
            <button>aaaaas</button>
            <button>aaa</button>
            <button>aaa</button>
         </div>
         <div id="score" class="hidden">
            <table id="table-score">
                <tr>
                  <th>Name</th>
                  <th>Answer</th>

                  <th>score</th>
                </tr>
               
                
              </table>
         </div>
        
    </div>

    
    
    </body>
    </html>

    <script>
        // function sleepFor(sleepDuration){
        // var now = new Date().getTime();
        // while(new Date().getTime() < now + sleepDuration){ 
        //     /* Do nothing */ 
        // }
        // }
        function shuffle(array) {
            let currentIndex = array.length;

            // While there remain elements to shuffle...
            while (currentIndex != 0) {

                // Pick a remaining element...
                let randomIndex = Math.floor(Math.random() * currentIndex);
                currentIndex--;

                // And swap it with the current element.
                [array[currentIndex], array[randomIndex]] = [
                array[randomIndex], array[currentIndex]];
            }
            return 0;
            }
        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }
    </script>

    <script>
        data_peserta = <%-JSON.stringify(peserta)%>;
        set_q = <%-JSON.stringify(setQuestion)%>;
        var myId = ""
        const my_uuid = localStorage.getItem("uuid");
        
            if (my_uuid == null){
                let myuuid = generateUUID();
                
                localStorage.setItem("uuid", myuuid);
                myId = myuuid
            } else {
                myId = my_uuid
            } 
        var app = {
        socket: null,
        connect: function() {
            var self = this;
            if( self.socket ) {
                self.socket.destroy();
                delete self.socket;
                self.socket = null;
            }
            this.socket = io.connect({
                reconnection: true,
                reconnectionDelay: 1000,
                reconnectionDelayMax : 5000,
                reconnectionAttempts: Infinity
            } );
            this.socket.on( 'connect', function () {
                             
                console.log( 'connected to server' );
            } );
            this.socket.on( 'disconnect', function () {
                console.log( 'disconnected from server' );
                window.setTimeout( 'app.connect()', 5000 );
            } );

            this.socket.on( 'timer', function (msg) {
                console.log(msg)
                $( "#timer" ).removeClass( "hidden" )
                $( "#timer" ).text(msg)
                
            } );
            this.socket.on( 'receive soal', function (msg) {
                $("#question").text(msg)
                $("#input-box").removeClass("remove")
                $("#answer-box").addClass("remove")
                $("#question").removeClass("remove")
                $("#timer").removeClass("remove")
                $("#score").addClass("hidden")
                $("#info").addClass("remove")
                console.log(msg)
                           
            } );

            this.socket.on( 'receive kecohan', function (msg) {
                console.log(msg)
                $("#input-box").addClass("remove")
                $("#answer-box").removeClass("remove hidden")
                $("#answer-box").empty()
                new_array = shuffle(msg)
                console.log(new_array)
                for (i = 0; i < msg.length; i ++){
                    if (msg[i][1] == myId){
                        continue
                    }
                    $("#answer-box").append(`<button id="button${i}" onclick="myFunction('${msg[i][1]}','button${i}')">${msg[i][0]}</button>`)
                }
                              
            } );
            this.socket.on( 'send score', async function (msg) {
                
                ronde = msg.round
                $("#input-box").addClass("remove")
                $("#answer-box").addClass("remove")
                $("#question").addClass("remove")
                $("#timer").addClass("remove")
                $("#score").removeClass("hidden remove")
                $("#info").removeClass("remove hidden")
                console.log("Send Score 3")
                msg_ronde = ("a" + ronde)
                $("#info").text("Jawaban yang Benar adalah : " + set_q[msg_ronde])
                await sleep(3000); 
                console.log(msg)
                console.log("asd")
                list_score = msg.msg
                
                var length = Object.keys(list_score).length;
                $("#table-score").find("tr:gt(0)").remove();
                
                    console.log("done")
                    await sleep(1000)
                for (var i = 0; i < length ; i++) {
                    data = list_score[Object.keys(list_score)[i]];
                    nama = data.name
                    pilihanText = data.pilihanText
                    score = data.score
                    $('#table-score tbody tr:last').after(`<tr>
                        <th>${nama}</th>
                        <th>${pilihanText}</th>
                        <th>${score}</th>
                    </tr>`);
                    console.log("done")
                    await sleep(1000)
                }
                

                await sleep(3000); 
                
                if (data_peserta[myId].host){
                    if (ronde == 4){
                        app.socket.emit('game finish', null);
                        //finish
                        window.location.href = "/"
                    }
                    mess = "start fase " + (ronde + 1)
                    app.socket.emit(mess, "aa");
                } else {
                    if (ronde == 4){
                        //finish
                        window.location.href = "/"
                    }
                }
                
                          
            } );
            
        }
        } // ap
        
       
         $( document ).ready(function() {

            //INIT
            socket = app.connect()  

            app.socket.emit('start-session', {  sessionId: myId })

            //INIT
            var i = 0;
            if (i == 0) {
                i = 1;
                var elem = document.getElementById("myBar");
                var width = 1;
                var id = setInterval(frame, 100);
                function frame() {
                
                if (width >= 100) {
                    clearInterval(id);
                    i = 0;
                    $(".bg").addClass("remove")
                    console.log(data_peserta[myId].host)
                    if (data_peserta[myId].host){
                        app.socket.emit('start fase 1', "aa");
                    }
                    
                } else {
                    width++;
                    elem.style.width = width + "%";
                }
                }
            }

            $("#send").on( "click", function() {   
                send_kecohan =  $(".kecohan").val()
                console.log(send_kecohan)   
                data = {
                    from : myId,
                    kecohan : send_kecohan
                }    
            
                app.socket.emit('send question', data);
                $(".kecohan").val("")
                $(".kunci").val(send_kecohan)
                
            });

           
            
         })

         function myFunction(orang,buttonId) {
            console.log(orang)
            var assign_peserta= Object.keys(data_peserta).length;
            console.log(assign_peserta)
            for (i = 0 ; i < assign_peserta+2 ; i++){
                word = "button" + i
                console.log(word)
                if (word == buttonId){
                    $('#'+word).addClass("button-choose")
                } else {
                    $('#'+word).removeClass("button-choose")
                }
            }
            data2 ={
                from:myId,
                answer:orang
            }
            app.socket.emit('send answer', data2);
        }

         
    </script>